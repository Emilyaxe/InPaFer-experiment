--- /Users/liangjingjing/WorkSpace/Data/Defects4J/projects/Math/Math_58_buggy//src/main/java//org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java	2019-03-18 15:03:33.000000000 +0800
+++ /Users/liangjingjing/WorkSpace/Data/Defects4J/projects/Math/Math_58_buggy//src/main/java//org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java.patched	2019-03-18 15:03:33.000000000 +0800
@@ -133,6 +133,12 @@
                 for (int j = 0; j < (solvedCols); ++j) {
                     int pj = permutation[j];
                     double dirJ = lmDir[pj];
+                    if (lmNorm > 0) {
+                        previousCost = org.apache.commons.math.util.FastMath.max(previousCost, lmPar);
+                    } else
+                        if (lmNorm < 0) {
+                            previousCost = org.apache.commons.math.util.FastMath.min(previousCost, lmPar);
+                        }
                     work1[j] = 0;
                     for (int i = 0; i <= j; ++i) {
                         work1[i] += (weightedResidualJacobian[i][pj]) * dirJ;
