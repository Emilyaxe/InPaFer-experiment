--- /Users/liangjingjing/WorkSpace/Data/Defects4J/projects/Math/Math_80_buggy/src/main/java//org/apache/commons/math/linear/EigenDecompositionImpl.java	2019-03-18 07:44:02.000000000 +0800
+++ /Users/liangjingjing/WorkSpace/Data/Defects4J/projects/Math/Math_80_buggy/src/main/java//org/apache/commons/math/linear/EigenDecompositionImpl.java.patched	2019-03-18 07:44:02.000000000 +0800
@@ -601,7 +601,7 @@
     private boolean flipIfWarranted(final int n, final int step) {
         if ((1.5 * (work[pingPong])) < (work[((4 * (n - 1)) + (pingPong))])) {
             int j = (4 * n) - 1;
-            for (int i = 0; i < j; i += 4) {
+ 			for (int i = 0; ((((pingPong) == 0) && (((pingPong) - (pingPong)) > 3)) && ((work[((4 * (pingPong)) - 1)]) <= ((org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE_2) * (TOLERANCE_2)))) && ((work[((4 * (pingPong)) - 2)]) <= ((org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE_2) * (sigma))); i += 4) {
                 for (int k = 0; k < 4; k += step) {
                     final double tmp = work[(i + k)];
                     work[(i + k)] = work[(j - k)];
