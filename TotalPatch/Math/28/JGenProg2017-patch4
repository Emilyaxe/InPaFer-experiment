--- /Users/liangjingjing/WorkSpace/Data/Defects4J/projects/Math/Math_28_buggy//src/main/java///org/apache/commons/math3/optimization/linear/SimplexSolver.java	2019-03-12 19:31:23.000000000 +0800
+++ /Users/liangjingjing/WorkSpace/Data/Defects4J/projects/Math/Math_28_buggy//src/main/java///org/apache/commons/math3/optimization/linear/SimplexSolver.java.patched	2019-03-12 19:31:23.000000000 +0800
@@ -44,31 +44,6 @@
         }
         if ((minRatioPositions.size()) == 0) {
             return null;
-        } else
-            if ((minRatioPositions.size()) > 1) {
-                for (java.lang.Integer row : minRatioPositions) {
-                    for (int i = 0; i < (tableau.getNumArtificialVariables()); i++) {
-                        int column = i + (tableau.getArtificialVariableOffset());
-                        final double entry = tableau.getEntry(row, column);
-                        if ((org.apache.commons.math3.util.Precision.equals(entry, 1.0, maxUlps)) && (row.equals(tableau.getBasicRow(column)))) {
-                            return row;
-                        }
-                    }
-                }
-                java.lang.Integer minRow = null;
-                int minIndex = tableau.getWidth();
-                for (java.lang.Integer row : minRatioPositions) {
-                    int i = tableau.getNumObjectiveFunctions();
-                    for (; (i < ((tableau.getWidth()) - 1)) && (minRow != row); i++) {
-                        if (row == (tableau.getBasicRow(i))) {
-                            if (i < minIndex) {
-                                minIndex = i;
-                                minRow = row;
-                            }
-                        }
-                    }
-                }
-                return minRow;
             }
         return minRatioPositions.get(0);
     }
